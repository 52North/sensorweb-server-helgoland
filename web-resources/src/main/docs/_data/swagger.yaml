openapi: 3.0.3
info:
  title: 52Â°North Sensor Web Server Helgoland API
  description: Thin Web binding API to access dataset data
  version: 3.0.0
servers:
  - url: https://cloud.sensorweb.demo.52north.org/sos/api/
consumes:
  - application/json
produces:
  - application/json
paths:
  /:
    get:
      summary: Available endpoints.
      tags:
        - General
      description: >
        A (static) collection of endpoints available from this API. Each includes a relative path and a short description.
      parameters:
        - $ref: '#/parameters/expandedParam'
      responses:
        '200':
          description: A collection of API endpoints
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Base'
  /search:
    get:
      summary: A simple search.
      tags:
        - General
      description: |
        A simple search over all resource's labels over all available endpoints. Note that the searching respects the current locale being selected.
      parameters:
        - name: q
          in: query
          description: Term which shall match (case insensitive) a resource's label
          required: true
          schema:
            type: string
        - $ref: '#/parameters/localeParam'
      responses:
        '200':
          description: A collection of search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Search'
          
  /categories:
    get:
      summary: Gets available categories
      tags:
        - Category
      description: >
        All available category instances. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.
        
        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.
      parameters:
        - $ref: '#/parameters/localeParam'
        - $ref: '#/parameters/expandedParam'
        - $ref: '#/parameters/servicesParam'
        - $ref: '#/parameters/phenomenaParam'
        - $ref: '#/parameters/proceduresParam'
        - $ref: '#/parameters/offeringsParam'
        - $ref: '#/parameters/platformsParam'
        - $ref: '#/parameters/featuresParam'
        - $ref: '#/parameters/datasetTypesParam'
        - $ref: '#/parameters/observationTypesParam'
        - $ref: '#/parameters/valueTypesParam'
        - $ref: '#/parameters/mobileParam'
        - $ref: '#/parameters/insituParam'
        - $ref: '#/parameters/matchDomainIdsParam'
      responses:
        '200':
          description: A collection of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DefaultEntity'
              example:
                id: "2"
                href: "https://cloud.sensorweb.demo.52north.org/sos/api/categories/2"
                domainId: SOS
                label: SOS
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'

  /categories/{categoryId}:
    get:
      summary: Gets a catefory instance
      tags:
        - Category
      description: |
        Gets a category instance.
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
          example: 2
        - $ref: '#/parameters/localeParam'
      responses:
        '200':
          description: An expanded item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultEntityExpanded'
              example:
                id: "2"
                href: "https://cloud.sensorweb.demo.52north.org/sos/api/categories/2"
                domainid: SOS
                label: SOS
                extras: 
                  - license
                service:
                  id: "1"
                  href: https://cloud.sensorweb.demo.52north.org/sos/api/services/1
                  domainId: "1"
                  label: My RESTful Dataset Service
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'
  /datasets:
    get:
      summary: Gets available datasets
      tags:
        - Datasets
          - Dataset
      description: |
        A collection of available datasets. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.
        
        
        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.
      parameters:
        - $ref: '#/parameters/localeParam'
        - $ref: '#/parameters/expandedParam'
        - $ref: '#/parameters/servicesParam'
        - $ref: '#/parameters/phenomenaParam'
        - $ref: '#/parameters/proceduresParam'
        - $ref: '#/parameters/offeringsParam'
        - $ref: '#/parameters/platformsParam'
        - $ref: '#/parameters/featuresParam'
        - $ref: '#/parameters/categoriesParam'
        - $ref: '#/parameters/datasetTypesParam'
        - $ref: '#/parameters/observationTypesParam'
        - $ref: '#/parameters/valueTypesParam'
        - $ref: '#/parameters/mobileParam'
        - $ref: '#/parameters/insituParam'
        - $ref: '#/parameters/matchDomainIdsParam'
        - $ref: '#/parameters/crsParam'
        - $ref: '#/parameters/bboxParam'
        - $ref: '#/parameters/nearParam'
      responses:
        '200':
          description: A collection of datasets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dataset'
              example:
                id: "79"
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'
            
  '/datasets/{datasetId}':
    get:
      summary: Gets a particular dataset
      tags:
        - Datasets
          - Dataset
      description: |
        Full view of a dataset instance. All relevant relations (parameters, unit, platform, etc.) are inlined. If any additional information is listed in the `extras` array member it can be retrieved via `/datasets/{datasetId}/extras` (see next).
      parameters:
        - name: datasetId
          in: path
          required: true
          type: string
        - $ref: '#/parameters/localeParam'
      responses:
        '200':
          description: A collection of datasets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetExpanded'
              example:
                id: "79"
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'
  /datasets/{datasetId}/observations:
    get:
      summary: Gets the observation values for the dataset
      tags:
        - Datasets
          - Dataset
      description: >
        Gets data for a given `timespan` filter. Implementations may limit the maximum amount of time intervals a client can query in one request. 


        What Mime-Types are supported depends on the `valueType`. For example `quantity` observations can be drawn as a timeseries chart 
        (i.e. either `image/png` or `application/pdf`). Supported Mime-Types are listed for each `valueType` when querying 
        `/service/{serviceId}` produces:
        
          - `application/json`
          - `image/png`
          - `text/csv`
          - `application/pdf`
          - `application/zip`

        
        Data can be classified into result times if these differ from actual `timestamp`. For example, this is the case
        for forecast data which might re-calculate (different result times) a given timespan. The `data` can be grouped 
        by using `resultTimes` parameter. When `resultTimes` parameter is missing, data of the oldest result is being 
        returned.

      parameters:
        - name: datasetId
          in: path
          required: true
          type: string
        - $ref: '#/parameters/expandedParam'
        - $ref: '#/parameters/timespanParam'
        - $ref: '#/parameters/formatParam'
        - $ref: '#/parameters/resultTimesParam'
        - $ref: '#/parameters/showTimeIntervalsParam'
        - $ref: '#/parameters/generalizeParam'
      responses:
        '200':
          description: Data for a given `timespan` in a requested output format
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Values'
                  - $ref: '#/components/schemas/ValuesExpanded'
                  - $ref: '#/components/schemas/ValuesFlot'
                  - $ref: '#/components/schemas/ValuesFlotExpanded'
        '400':
          description: A query parameter does not match expected format
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_400'
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'
  /timeseries:
    get:
      summary: Gets available datasets
      tags:
        - Datasets
          - Timeseries
      description: |
        A collection of available datasets whose dataset type is `timeseries`. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.
        
        
        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.
      parameters:
        - $ref: '#/parameters/localeParam'
        - $ref: '#/parameters/expandedParam'
        - $ref: '#/parameters/servicesParam'
        - $ref: '#/parameters/phenomenaParam'
        - $ref: '#/parameters/proceduresParam'
        - $ref: '#/parameters/offeringsParam'
        - $ref: '#/parameters/platformsParam'
        - $ref: '#/parameters/featuresParam'
        - $ref: '#/parameters/categoriesParam'
        - $ref: '#/parameters/datasetTypesParam'
        - $ref: '#/parameters/observationTypesParam'
        - $ref: '#/parameters/valueTypesParam'
        - $ref: '#/parameters/mobileParam'
        - $ref: '#/parameters/insituParam'
        - $ref: '#/parameters/matchDomainIdsParam'
        - $ref: '#/parameters/crsParam'
        - $ref: '#/parameters/bboxParam'
        - $ref: '#/parameters/nearParam'
      responses:
        '200':
          description: A collection of datasets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dataset'
              example:
                id: "79"
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'
  /trajectories:
    get:
      summary: Gets available datasets
      tags:
        - Datasets
          - Trajectories
      description: |
        A collection of available datasets whose dataset type is `trajectory`. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.
        
        
        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.
      parameters:
        - $ref: '#/parameters/localeParam'
        - $ref: '#/parameters/expandedParam'
        - $ref: '#/parameters/servicesParam'
        - $ref: '#/parameters/phenomenaParam'
        - $ref: '#/parameters/proceduresParam'
        - $ref: '#/parameters/offeringsParam'
        - $ref: '#/parameters/platformsParam'
        - $ref: '#/parameters/featuresParam'
        - $ref: '#/parameters/categoriesParam'
        - $ref: '#/parameters/datasetTypesParam'
        - $ref: '#/parameters/observationTypesParam'
        - $ref: '#/parameters/valueTypesParam'
        - $ref: '#/parameters/mobileParam'
        - $ref: '#/parameters/insituParam'
        - $ref: '#/parameters/matchDomainIdsParam'
        - $ref: '#/parameters/crsParam'
        - $ref: '#/parameters/bboxParam'
        - $ref: '#/parameters/nearParam'
      responses:
        '200':
          description: A collection of datasets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dataset'
              example:
                id: "79"
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'
  /individualObservations:
    get:
      summary: Gets available datasets
      tags:
        - Datasets
          - IndividualObservations
      description: |
        A collection of available datasets whose dataset type is `individualObservation`. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.
        
        
        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.
      parameters:
        - $ref: '#/parameters/localeParam'
        - $ref: '#/parameters/expandedParam'
        - $ref: '#/parameters/servicesParam'
        - $ref: '#/parameters/phenomenaParam'
        - $ref: '#/parameters/proceduresParam'
        - $ref: '#/parameters/offeringsParam'
        - $ref: '#/parameters/platformsParam'
        - $ref: '#/parameters/featuresParam'
        - $ref: '#/parameters/categoriesParam'
        - $ref: '#/parameters/datasetTypesParam'
        - $ref: '#/parameters/observationTypesParam'
        - $ref: '#/parameters/valueTypesParam'
        - $ref: '#/parameters/mobileParam'
        - $ref: '#/parameters/insituParam'
        - $ref: '#/parameters/matchDomainIdsParam'
        - $ref: '#/parameters/crsParam'
        - $ref: '#/parameters/bboxParam'
        - $ref: '#/parameters/nearParam'
      responses:
        '200':
          description: A collection of datasets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dataset'
              example:
                id: "79"
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'


  /features:
    get:
      summary: Get available feature instances
      tags:
        - Feature
      description: >
        All available instances.
      parameters:
        - $ref: '#/parameters/localeParam'
        - $ref: '#/parameters/expandedParam'
        - $ref: '#/parameters/servicesParam'
        - $ref: '#/parameters/phenomenaParam'
        - $ref: '#/parameters/proceduresParam'
        - $ref: '#/parameters/offeringsParam'
        - $ref: '#/parameters/platformsParam'
        - $ref: '#/parameters/categoriesParam'
        - $ref: '#/parameters/datasetTypesParam'
        - $ref: '#/parameters/observationTypesParam'
        - $ref: '#/parameters/valueTypesParam'
        - $ref: '#/parameters/mobileParam'
        - $ref: '#/parameters/insituParam'
        - $ref: '#/parameters/matchDomainIdsParam'
        - $ref: '#/parameters/crsParam'
        - $ref: '#/parameters/bboxParam'
        - $ref: '#/parameters/nearParam'
      responses:
        '200':
          description: A collection of features
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
              example:
                id: "3"
                properties:
                  label: ELV WS2500
                  href: "https://cloud.sensorweb.demo.52north.org/sos/api/features/3"
                  domainId: elv-ws2500
                type: Feature
                geometry:
                  type: Point
                  coordinates:
                    - 7.652428150177
                    - 51.934814453125
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'
  '/features/{featureId}':
    get:
      summary: Gets an feature instance
      tags:
        - Feature
      description: |
        Gets a feature instance.
      parameters:
        - name: featureId
          in: path
          required: true
          type: string
        - $ref: '#/parameters/localeParam'
      responses:
        '200':
          description: An expanded item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureExpanded'
              example:
                id: "3"
                properties:
                  label: ELV WS2500
                  href: "https://cloud.sensorweb.demo.52north.org/sos/api/features/3"
                  domainId: elv-ws2500
                  datasets:
                    phenomenon:
                      id: 42,
                      href: https://cloud.sensorweb.demo.52north.org/sos/api/phenomena/42,
                      domainId: AthmosphericPressure
                      label: AthmosphericPressure
                    procedure:
                      id: "8"
                      href: https://cloud.sensorweb.demo.52north.org/sos/api/procedures/8
                      domainId: ws2500
                      label: 52n-elv-ws2500
                    category:
                      id: "2"
                      href: https://cloud.sensorweb.demo.52north.org/sos/api/categories/2
                      domainId: SOS
                      label: SOS
                    offering:
                      id: "8"
                      href: https://cloud.sensorweb.demo.52north.org/sos/api/offerings/8
                      domainId: ws2500
                      label: 52North Weatherstation ELV WS2500
                    service:
                      id: "1"
                      href: https://cloud.sensorweb.demo.52north.org/sos/api/services/1
                      domainId: 1
                      label: My RESTful Dataset Service
                    platform:
                      id: "5"
                      href: https://cloud.sensorweb.demo.52north.org/sos/api/platforms/5
                      domainId: elv-ws2500
                      label: ELV WS2500
                type: Feature
                geometry:
                  type: Point
                  coordinates:
                    - 7.652428150177
                    - 51.934814453125
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'
  /offerings:
    get:
      summary: Gets available offerings
      tags:
        - Offering
      description: >
        All available offering instances. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.
        
        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.
      parameters:
        - $ref: '#/parameters/localeParam'
        - $ref: '#/parameters/expandedParam'
        - $ref: '#/parameters/servicesParam'
        - $ref: '#/parameters/phenomenaParam'
        - $ref: '#/parameters/proceduresParam'
        - $ref: '#/parameters/categoriesParam'
        - $ref: '#/parameters/platformsParam'
        - $ref: '#/parameters/featuresParam'
        - $ref: '#/parameters/datasetTypesParam'
        - $ref: '#/parameters/observationTypesParam'
        - $ref: '#/parameters/valueTypesParam'
        - $ref: '#/parameters/mobileParam'
        - $ref: '#/parameters/insituParam'
        - $ref: '#/parameters/matchDomainIdsParam'
      responses:
        '200':
          description: A collection of offerings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DefaultEntity'
              example:
                id: "6"
                href: "https://cloud.sensorweb.demo.52north.org/sos/api/offerings/6"
                domainId: wxt520
                label: 52North Weatherstation Vaisala WXT 520
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'

  /offerings/{offeringId}:
    get:
      summary: Gets a offering instance
      tags:
        - Offering
      description: |
        Gets a offering instance.
      parameters:
        - name: offeringId
          in: path
          required: true
          schema:
            type: string
          example: 2
        - $ref: '#/parameters/localeParam'
      responses:
        '200':
          description: An expanded item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultEntityExpanded'
              example:
                id: "6"
                href: "https://cloud.sensorweb.demo.52north.org/sos/api/offerings/6"
                domainId: wxt520
                label: 52North Weatherstation Vaisala WXT 520
                extras: 
                  - license
                service:
                  id: "1"
                  href: https://cloud.sensorweb.demo.52north.org/sos/api/services/1
                  domainId: "1"
                  label: My RESTful Dataset Service
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'

  /phenomena:
    get:
      summary: Gets available offerings
      tags:
        - Phenomena
      description: >
        All available offering instances. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.
        
        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.
      parameters:
        - $ref: '#/parameters/localeParam'
        - $ref: '#/parameters/expandedParam'
        - $ref: '#/parameters/servicesParam'
        - $ref: '#/parameters/phenomenaParam'
        - $ref: '#/parameters/proceduresParam'
        - $ref: '#/parameters/categoriesParam'
        - $ref: '#/parameters/platformsParam'
        - $ref: '#/parameters/featuresParam'
        - $ref: '#/parameters/datasetTypesParam'
        - $ref: '#/parameters/observationTypesParam'
        - $ref: '#/parameters/valueTypesParam'
        - $ref: '#/parameters/mobileParam'
        - $ref: '#/parameters/insituParam'
        - $ref: '#/parameters/matchDomainIdsParam'
      responses:
        '200':
          description: A collection of offerings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DefaultEntity'
              example:
                id: "39"
                href: "https://cloud.sensorweb.demo.52north.org/sos/api/phenomena/39"
                domainId: AirTemperature
                label: AirTemperature
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'

  /phenomena/{phenomenaId}:
    get:
      summary: Gets a offering instance
      tags:
        - Phenomena
      description: |
        Gets a phenomena instance.
      parameters:
        - name: platformId
          in: path
          required: true
          schema:
            type: string
          example: 2
        - $ref: '#/parameters/localeParam'
      responses:
        '200':
          description: An expanded item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultEntityExpanded'
              example:
                id: "39"
                href: "https://cloud.sensorweb.demo.52north.org/sos/api/phenomena/39"
                domainId: AirTemperature
                label: AirTemperature
                extras: 
                  - license
                service:
                  id: "1"
                  href: https://cloud.sensorweb.demo.52north.org/sos/api/services/1
                  domainId: "1"
                  label: My RESTful Dataset Service
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'
  /platforms:
    get:
      summary: Gets available platforms
      tags:
        - Platform
      description: >
        All available platform instances. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.
        
        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.
      parameters:
        - $ref: '#/parameters/localeParam'
        - $ref: '#/parameters/expandedParam'
        - $ref: '#/parameters/servicesParam'
        - $ref: '#/parameters/phenomenaParam'
        - $ref: '#/parameters/proceduresParam'
        - $ref: '#/parameters/categoriesParam'
        - $ref: '#/parameters/offeringsParam'
        - $ref: '#/parameters/featuresParam'
        - $ref: '#/parameters/datasetTypesParam'
        - $ref: '#/parameters/observationTypesParam'
        - $ref: '#/parameters/valueTypesParam'
        - $ref: '#/parameters/mobileParam'
        - $ref: '#/parameters/insituParam'
        - $ref: '#/parameters/matchDomainIdsParam'
      responses:
        '200':
          description: A collection of platforms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DefaultEntity'
              example:
                id: "5"
                href: "https://cloud.sensorweb.demo.52north.org/sos/api/platforms/5"
                domainId: elv-ws2500
                label: ELV WS2500
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'

  /platforms/{platformId}:
    get:
      summary: Gets a platform instance
      tags:
        - Platform
      description: |
        Gets a platform instance.
      parameters:
        - name: platformId
          in: path
          required: true
          schema:
            type: string
          example: 2
        - $ref: '#/parameters/localeParam'
      responses:
        '200':
          description: An expanded item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultEntityExpanded'
              example:
                id: "5"
                href: "https://cloud.sensorweb.demo.52north.org/sos/api/platforms/5"
                domainId: elv-ws2500
                label: ELV WS2500
                extras: 
                  - license
                  - parents
                service:
                  id: "1"
                  href: https://cloud.sensorweb.demo.52north.org/sos/api/services/1
                  domainId: "1"
                  label: My RESTful Dataset Service
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'
  /procedures:
    get:
      summary: Gets available procedures
      tags:
        - Procedure
      description: >
        All available procedure instances. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.
        
        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.
      parameters:
        - $ref: '#/parameters/localeParam'
        - $ref: '#/parameters/expandedParam'
        - $ref: '#/parameters/servicesParam'
        - $ref: '#/parameters/phenomenaParam'
        - $ref: '#/parameters/offeringsParam'
        - $ref: '#/parameters/categoriesParam'
        - $ref: '#/parameters/platformsParam'
        - $ref: '#/parameters/featuresParam'
        - $ref: '#/parameters/datasetTypesParam'
        - $ref: '#/parameters/observationTypesParam'
        - $ref: '#/parameters/valueTypesParam'
        - $ref: '#/parameters/mobileParam'
        - $ref: '#/parameters/insituParam'
        - $ref: '#/parameters/matchDomainIdsParam'
      responses:
        '200':
          description: A collection of procedures
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DefaultEntity'
              example:
                id: "8"
                href: "https://cloud.sensorweb.demo.52north.org/sos/api/procedures/8"
                domainId: wxt520
                label: 52n-elv-ws2500
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'

  /procedures/{procedureId}:
    get:
      summary: Gets a offering instance
      tags:
        - Procedure
      description: |
        Gets a procedure instance.
      parameters:
        - name: procedureId
          in: path
          required: true
          schema:
            type: string
          example: 2
        - $ref: '#/parameters/localeParam'
      responses:
        '200':
          description: An expanded item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultEntityExpanded'
              example:
                id: "8"
                href: "https://cloud.sensorweb.demo.52north.org/sos/api/procedures/8"
                domainId: wxt520
                label: 52n-elv-ws2500
                extras: 
                  - license
                service:
                  id: "1"
                  href: https://cloud.sensorweb.demo.52north.org/sos/api/services/1
                  domainId: "1"
                  label: My RESTful Dataset Service
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'
  /tags:
    get:
      summary: Gets available tags
      tags:
        - Tag
      description: >
        All available tag instances. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.
        
        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.
      parameters:
        - $ref: '#/parameters/localeParam'
        - $ref: '#/parameters/expandedParam'
        - $ref: '#/parameters/servicesParam'
        - $ref: '#/parameters/phenomenaParam'
        - $ref: '#/parameters/offeringsParam'
        - $ref: '#/parameters/categoriesParam'
        - $ref: '#/parameters/platformsParam'
        - $ref: '#/parameters/featuresParam'
        - $ref: '#/parameters/datasetTypesParam'
        - $ref: '#/parameters/observationTypesParam'
        - $ref: '#/parameters/valueTypesParam'
        - $ref: '#/parameters/mobileParam'
        - $ref: '#/parameters/insituParam'
        - $ref: '#/parameters/matchDomainIdsParam'
      responses:
        '200':
          description: A collection of tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DefaultEntity'
              example:
                id: "3"
                href: "https://cloud.sensorweb.demo.52north.org/sos/api/tags/3"
                domainId: 3
                label: 3
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'
  /tags/{tagId}:
    get:
      summary: Gets a offering instance
      tags:
        - Tag
      description: |
        Gets a tag instance.
      parameters:
        - name: tagId
          in: path
          required: true
          schema:
            type: string
          example: 2
        - $ref: '#/parameters/localeParam'
      responses:
        '200':
          description: An expanded item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultEntityExpanded'
              example:
                id: "3"
                href: "https://cloud.sensorweb.demo.52north.org/sos/api/tags/3"
                domainId: 3
                label: 3
                extras: 
                  - license
                service:
                  id: "1"
                  href: https://cloud.sensorweb.demo.52north.org/sos/api/services/1
                  domainId: "1"
                  label: My RESTful Dataset Service
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'

  /services:
    get:
      summary: Gets available services
      tags:
        - Service
      description: >
        All available service instances. Depending on the `expanded` parameter the collections items are compact or do inline full metadata.
        
        Filter options help to focus on a particular set of items. Filter either by parameters or spatially.
      parameters:
        - $ref: '#/parameters/localeParam'
        - $ref: '#/parameters/expandedParam'
        - $ref: '#/parameters/offeringsParam'
        - $ref: '#/parameters/phenomenaParam'
        - $ref: '#/parameters/proceduresParam'
        - $ref: '#/parameters/categoriesParam'
        - $ref: '#/parameters/platformsParam'
        - $ref: '#/parameters/featuresParam'
        - $ref: '#/parameters/datasetTypesParam'
        - $ref: '#/parameters/observationTypesParam'
        - $ref: '#/parameters/valueTypesParam'
        - $ref: '#/parameters/mobileParam'
        - $ref: '#/parameters/insituParam'
        - $ref: '#/parameters/matchDomainIdsParam'
      responses:
        '200':
          description: A collection of services
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DefaultEntity'
              example:
                id: "1"
                href: "https://cloud.sensorweb.demo.52north.org/sos/api/services/1"
                domainId: "1"
                label: My RESTful Dataset Service
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'

  /services/{serviceId}:
    get:
      summary: Gets a offering instance
      tags:
        - Service
      description: |
        Gets a category instance.
      parameters:
        - name: offeringId
          in: path
          required: true
          schema:
            type: string
          example: 2
        - $ref: '#/parameters/localeParam'
      responses:
        '200':
          description: An expanded item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceExpanded'
              example:
                id: "1"
                href: "https://cloud.sensorweb.demo.52north.org/sos/api/services/1"
                domainId: "1"
                label: My RESTful Dataset Service
                extras: 
                  - license
                supportsFirstLatest: true
                quantities: 
                  features: 4
                  phenomena: 33
                  procedures: 4
                  categories: 1
                  platforms: 4
                  offerings: 4
                  datasets:
                    total: 43
                    timeseries: 43
                    individualObservations: 0
                    trajectories: 0
                    profiles: 0
                  measuringPrograms: 0
                  samplings: 0
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_404'
        '415':
          description: Media Item not supported
          content:
            application/json:
              schema:
                $ref: '#/definitions/Errors/Error_415'
parameters:
  expandedParam:
    name: expanded
    in: query
    type: boolean
    description: >
      If `true` a list of partially expanded resource items is returned. The expansion provides more  detailed information up to a certain point. However, it does not necessarily provide all item  information as one may get when request the resource item itself.


      The expanded works almost only for resource collection. However, exceptions may exist (e.g.  for getting raw data). Exceptions are explicitly documented. The default is `false`.

    required: false
    explode: true
    schema:
      type: boolean
      enum:
        - true
        - false
  datasetTypesParam:
    name: datasetTypes
    in: query
    required: false
    explode: true
    schema:
      type: string
      example: timeseries
    collectionFormat: csv
    description: >
      Filters the resources to get only those related to the dataset type filter.


      Allowed values are `individualObservation`, `sampling`, `timeseries`, `profile`, `trajectory`.
  observationTypesParam:
    name: observationTypes
    in: query
    required: false
    explode: true
    schema:
      type: string
      example: simple
    collectionFormat: csv
    description: >
      Filters the resources to get only those related to the observation type filter.


      Allowed values are `simple`, `profile`, `timeseries`, `trajectory`.
  valueTypesParam:
    name: valueTypes
    in: query
    required: false
    explode: true
    schema:
        type: string
        example: quantity
    collectionFormat: csv
    description: >
      Filters the resources to get only those related to the value type filter.


      Allowed values are `quantity`, `count`, `text`, `category`, `bool`, `geometry`, `blob`, `reference`, `complex`, `dataarray` or any other custom types given by the  implementing backend.
  mobileParam:
    name: mobile
    in: query
    type: boolean
    description: >
      Filters the resources to get only those related to the mobile filter.
    required: false
    explode: true
    schema:
      type: boolean
      enum:
        - true
        - false
  insituParam:
    name: insitu
    in: query
    type: boolean
    description: >
      Filters the resources to get only those related to the insitu filter.
    required: false
    explode: true
    schema:
      type: boolean
      enum:
        - true
        - false
  matchDomainIdsParam :
    name: matchDomainIds
    in: query
    type: boolean
    description: >
      If `true` the filter parameters would be executed on the domain id/identifier of the entity. The default is `false`.
    required: false
    explode: true
    schema:
      type: boolean
      enum:
        - true
        - false
  servicesParam:
    name: services
    in: query
    required: false
    explode: true
    schema:
      type: string
      example: simple
    collectionFormat: csv
    description: >
      All resources where the given service id does match.
  categoriesParam:
    name: categories
    in: query
    required: false
    explode: true
    schema:
      type: string
      example: simple
    collectionFormat: csv
    description: >
      All resources where the given category id does match.
  phenomenaParam:
    name: phenomena
    in: query
    required: false
    explode: true
    schema:
      type: string
      example: simple
    collectionFormat: csv
    description: >
      All resources where the given phenomenon id does match.
  proceduresParam:
    name: procedures
    in: query
    required: false
    explode: true
    schema:
      type: string
      example: simple
    collectionFormat: csv
    description: >
      All resources where the given procedure id does match.
  offeringsParam:
    name: offerings
    in: query
    required: false
    explode: true
    schema:
      type: string
      example: simple
    collectionFormat: csv
    description: >
      All resources where the given offering id does match.
  featuresParam:
    name: features
    in: query
    required: false
    explode: true
    schema:
      type: string
      example: simple
    collectionFormat: csv
    description: >
      All resources where the given feature id does match.
  platformsParam:
    name: platforms
    in: query
    required: false
    explode: true
    schema:
      type: string
      example: simple
    collectionFormat: csv
    description: |
      All resources where the given platform id does match.
  localeParam:
    name: locale
    in: query
    required: false
    example: de_de
    schema:
      type: string
    description: >
      Specifies the language as [ISO639](http://en.wikipedia.org/wiki/ISO_639) code. Subdivisions are  respected by an `_` , e.g. `en_US` for American English.


      The REST-API should consider the following order to detect a locale


      * Accept-Language (e.g. header information)

      * locale parameter


      A fallback language cannot be specified as it depends on the data of the service provider.
  timespanParam:
    name: timespan
    in: query
    type: string
    description: >
      An [ISO8601](http://en.wikipedia.org/wiki/ISO_8601#Time_intervals) 
      formatted period. Only backslash formatted values are supported.
  crsParam:
    name: crs
    in: query
    type: string
    description: >
      The client indicates that input geometries shall be interpreted as being referenced by the given CRS (for example in case of `crs=EPSG:25832` to  [ETRS89/UTM zone 32N](http://spatialreference.org/ref/epsg/25832/)).


      Per default geometries are referenced by the WGS84 CRS (CRS84, i.e.
      lon/lat order). If crs value differs from default, all output geometries are transformed to match
      the asked CRS.


      Please note that some CRS switch coordinate axes. Double check axes
      ordering before interpreting coordinates!
  bboxParam:
    name: bbox
    in: query
    type: string
    description: >
      Features within a given bounding box (in WGS84 by default). Refer to the
      crs parameter if a  non-default CRS shall be used. The Box can be supplied as either as json Points or as GeoJSON bbox.
    

      Alternative 1: json Points


      ```json 
      bbox={
        "ll": {
          "type": "Point",
          "coordinates": [<x>,<y>]
        },
        "ur": {
          "type": "Point",
          "coordinates": [<x>,<y>]
        }
      }

      ```


      Alternative 2: GeoJSON bbox


      ```json
      bbox=<minx>,<miny>,<maxx>,<maxy>
      ```
  nearParam:
    name: near
    in: query
    type: string
    description: >
      Features within a given bounding box (in WGS84 by default). Refer to the `crs` parameter if a  non-default CRS shall be used.


      ```json
      near={
        "center": {
          "type": "Point",
          "coordinates": [<x>,<y>]
        },
        "radius":500
      }

      ```
  legendParam:
    name: legend
    in: query
    type: boolean
    description: >
      Indicates if a legend shall be rendered directly on the image output (if `image/png` shall be  the output).
  gridParam:
    name: grid
    in: query
    type: boolean
    description: ''
  widthParam:
    name: width
    in: query
    type: integer
    format: int32
    description: |
      If `image/png` is requested, width determines the width in pixels.
  heightParam:
    name: height
    in: query
    type: integer
    format: int32
    description: |
      If `image/png` is requested, height determines the height in pixels.
  generalizeParam:
    name: generalize
    in: query
    type: boolean
    description: >
      Indicates that timeseries data shall be generalized. See generalization
      section for details.
  formatParam:
    name: format
    in: query
    type: string
    description: >
      Controls the output format of raw timeseries data. This avoids converting
      between different  data formats on client side which uses a 3rd party chart rendering API.
      Currently, supported formats

        * *tvp* Time value pairs (the default)
        
        * *highcharts* [Highcharts](http://www.highcharts.com/) series data format.
        
        
      Refer to the Format section for detailed information how the formats will look like.
  base64Param:
    name: base64
    in: query
    type: boolean
    description: >
      Indicates binary images shall be encoded to a base64 string on server side. This makes it easily possible to display images from JavaScript (you would need a byte parsing library  otherwise).


      Here is an example how to embed encoded base64 string

      ```

      <img src='data:image/png;base64," + encodedString + "' />

      ```
  
  geometryTypesParam:
    name: geometryTypes
    in: query
    type: string
    enum:
      - point
      - linestring
      - polygon
    description: |
      The type of geometry based on [WKT types](https://en.wikipedia.org/wiki/Well-known_text).
  platformGeometriesParam:
    name: platformGeometries
    in: query
    type: array
    collectionFormat: csv
    items:
      type: string
      enum:
        - site
        - track
    description: |
      The platform's geometry, either `site` for `stationary` platforms (or `station`s) or `track` for `mobile` platforms.
  observedGeometriesParam:
    name: observedGeometries
    in: query
    type: array
    collectionFormat: csv
    items:
      type: string
      enum:
        - static
        - dynamic
    description: |
      The platform's observed geometry, either `static` for `remote` platforms observing fixed geometries or `dynamic` otherwise.
  resultTimesParam:
    name: resultTimes
    in: query
    type: array
    collectionFormat: csv
    description: |
      Filter data which is available for different result times. Query `/extras?fields=resultTimes` beforehand to get
      a list of result times or add `resultTimes=all` to get all data classified by result time. In case of `resultTime`
      is missing from Query, those data will be returned which belongs to the oldest result time.
  showTimeIntervalsParam:
    name: showTimeIntervals
    in: query
    schema:
      type: boolean
      example: false
    description: >
      Select whether Time fields in the output shall be returned using a single Timestamp or a Time Interval.
components:
  schemas:
    Base:
      type: object
      properties: 
        id: 
          type: string
          description: The id of the entry, used for querying.
          example: datasets
        label: 
          type: string
          description: Label/name of the resource.
          example: Datasets
        description: 
          type: string
          description: Description of the resource.
          example: Represents a sequence of data values observed over time.
        href: 
          type: string
          format: uri
          description: Link to the resource.
          example: http://localhost:8080/52n-sos-webapp/api/datasets
        size:
          type: integer
          description: Count of available entries.
          example: 10
          required: false 
    Search:
      type: object
      properties: 
        id: 
          type: string
          description: The id of the entry, used for querying.
          example: "1"
        label: 
          type: string
          description: The label/name of the entry.
          example: Datasets
        type: 
          type: string
          description: The entity type of the entry.
          example: dataset
        href: 
          type: string
          format: uri
          description: Link to the representation of the entity
          example: http://localhost:8080/52n-sos-webapp/api/datasets/1
    DefaultEntity:
      type: object
      properties: 
        id: 
          type: string
          description: The id of the entity, used for querying
        href: 
          type: string
          format: uri
          description: Link to the representation of the entity
        domainid: 
          type: string
          description: The domainid/identifier of the entity.
        label: 
          type: string
          description: The label/name of the entity.
    DefaultEntityExpanded:
      allOf:
        - $ref: '#/components/schemas/DefaultEntity'
        - type: object
          properties:
            extras:
              $ref: '#/components/schemas/Extra'
            service:
              $ref: '#/components/schemas/Service'
    Service:
      allOf:
        - $ref: '#/components/schemas/DefaultEntity'
      example:
        service:
          id: 1
          href: https://cloud.sensorweb.demo.52north.org/sos/api/services/1
          domainId: 1
          label: My RESTful Dataset Service 
    Extra:
      type: array
      items:
        type: string
        example: license
    Extras:
      type: object
      properties:
        license:
          type: string
          example: http://special-licensing.lic/
    Dataset:
      type: object
      properties: 
        id: 
          type: string
          description: The id of the entity, used for querying
        href: 
          type: string
          format: uri
          description: Link to the representation of the entity
        label: 
          type: string
          description: The label/name of the entity.
        datasetType:
          type: string
          description: The type of the dataset
        observationType:
          type: string
          description: The type of the dataset observations
        valueType:
          type: string
          description: The type of the dataset values
        mobile:
          type: string
          description: Is this a mobile dataset
        insitu:
          type: string
          description: Is this an insitu dataset
        uom:
          type: string
          description: The unit of measurement of the dataset
        originTimezone:
          type: string
          description: The original time zome of the observation value
        samplingTimeStart:
          type: string
          format: date-time
          description: The minimal time the observation value
        samplingTimeEnd:
          type: string
          format: date-time
          description: The maximum time of the observation value
        feature:
          $ref: '#/components/schemas/Feature'
    DatasetExpanded:
      allOf:
        - $ref: '#/components/schemas/Dataset'
        - type: object
          properties:
            extras:
              type: array
              items:
                type: string
            referenceValues:
              type: array
              items:
                $ref: '#/components/schemas/ReferenceValue'
            firstValue:
              $ref: '#/components/schemas/Value'
            lastValue:
              $ref: '#/components/schemas/Value'
            parameters:
              $ref: '#/components/schemas/DatasetParameters'
    DatasetParameters:
      type: object
      properties:
        phenomenon:
          $ref: '#/components/schemas/DefaultEntity'
        procedure:
          $ref: '#/components/schemas/DefaultEntity'
        category:
          $ref: '#/components/schemas/DefaultEntity'
        offering:
          $ref: '#/components/schemas/DefaultEntity'
        service:
          $ref: '#/components/schemas/DefaultEntity'
        platform:
          $ref: '#/components/schemas/DefaultEntity'
    ReferenceValue:
      type: object
      properties:
        referenceValueId:
          type: string
          description: The id of the reference  dataset.
        label:
          type: string
          description: The label/name of the reference value.
        lastValue:
          $ref: '#/components/schemas/Value'
    FeatureProperties:
      type: object
      properties: 
        label: 
          type: string
          description: The label/name of the entity.
        href: 
          type: string
          format: uri
          description: Link to the representation of the entity
        domainid: 
          type: string
          description: The domainid/identifier of the entity.
    FeatureDatasets:
      type: object
      properties:
        phenomenon:
          $ref: '#/components/schemas/DefaultEntity'
        procedure:
          $ref: '#/components/schemas/DefaultEntity'
        category:
          $ref: '#/components/schemas/DefaultEntity'
        offering:
          $ref: '#/components/schemas/DefaultEntity'
        service:
          $ref: '#/components/schemas/DefaultEntity'
        platform:
          $ref: '#/components/schemas/DefaultEntity'
    FeaturePropertiesExpanded:
      allOf:
        - $ref: '#/components/schemas/FeatureProperties'
        - type: object
          properties: 
            datasets:
              $ref: '#/components/schemas/FeatureDatasets'
    Feature:
      type: object
      properties: 
        id: 
          type: string
          description: The id of the entity, used for querying
        properties:
          description:
          allOf:
            - $ref: '#/components/schemas/FeatureProperties'
        type: 
          type: string
          description: The type of the GeoJSON feature
        geometry:
          type: object
          properties:
            type: 
              type: string
              description: The type of the GeoJSON geometry
            coordinates:
              type: array
              description: The coordinates of the GeoJSON geometry
              maxItems: 2
              minItems: 2
              items:
                type: number
    FeatureExpanded:
      type: object
      properties: 
        id: 
          type: string
          description: The id of the entity, used for querying
        properties:
          description:
          $ref: '#/components/schemas/FeaturePropertiesExpanded'
        type: 
          type: string
          description: The type of the GeoJSON feature
        geometry:
          type: object
          properties:
            type: 
              type: string
              description: The type of the GeoJSON geometry
            coordinates:
              type: array
              description: The coordinates of the GeoJSON geometry
              maxItems: 2
              minItems: 2
              items:
                type: number
    ServiceExpanded:
      allOf:
        - $ref: '#/components/schemas/Service'
        - type: object
          properties:
            extras:
              type: array
              items:
                type: string
                example: license
            supportsFirstLatest:
              type: boolean 
            quantities:
              type: object
              properties:
                featuers:
                  type: integer
                phenomena:
                  type: integer
                procedures:
                  type: integer
                categories:
                  type: integer
                platforms:
                  type: integer
                offerings:
                  type: integer
                datasets:
                  type: object
                  properties:
                    total:
                      type: integer
                    timeseries:
                      type: integer
                    individualObservations:
                      type: integer
                    trajectories:
                      type: integer
                    profiles:
                      type: integer
                measuringPrograms:
                  type: integer
                samplings:
                  samplings: integer
    Value:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: The time value
        value:
          type: number
          description: The value
    Values:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/Value'
    ValuesExpanded:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/Value'
        extra:
          type: object
          properties:
            referenceValues:
              type: array
              items:
                $ref: '#/components/schemas/Value'
            valueBeforeTimespan:
              nullable: true
              oneOf:
                - $ref: '#/components/schemas/Value'
            valueAfterTimespan:
              nullable: true
              oneOf:
                - $ref: '#/components/schemas/Value'
    ValuesFlot:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/ValueFlot'
    ValuesFlotExpanded:
      type: object
      description: The expanded flot value output
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/ValueFlot'
        referenceValues:
          required: false
          type: array
          items:
            $ref: '#/components/schemas/ValueFlot'
        valueBeforeTimespan:
          required: false
          oneOf:
            - $ref: '#/components/schemas/ValueFlot'
        valueAfterTimespan:
          required: false
          oneOf:
            - $ref: '#/components/schemas/ValueFlot'
    ValueFlot:
      type: array
      description: The time and value
      maxItems: 2
      minItems: 2
      items:
        oneOf:
          - integer
          - number

definitions:
  SimpleDataRequest:
    type: object
    properties:
      datasetIds:
        type: array
        items:
          type: string
  StyledDataRequest:
    type: object
    required:
      - styleOptions
    properties:
      legend:
        type: boolean
      grid:
        type: boolean
      locale:
        type: string
      width:
        type: integer
        format: int32
      height:
        type: integer
        format: int32
      timespan:
        type: string
      styleOptions:
        $ref: '#/definitions/Style'
  Style:
    type: object
    description: ''
    properties:
      chartType:
        type: string
        enum:
          - line
          - bar

  Errors:
    Error:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        reason:
          type: string
        userMessage:
          type: string
    Error_400:
      allOf:
        - $ref: '#/definitions/Errors/Error'
      example:
          statusCode: 400
          reason: Bad Request
          userMessage: The requested parameter is invalid.
    Error_404:
      allOf:
        - $ref: '#/definitions/Errors/Error'
      example:
          statusCode: 404
          reason: Not Found
          userMessage: Resource with id '4556465' was not found.
    Error_415:
      allOf:
        - $ref: '#/definitions/Errors/Error'
      example:
        statusCode: 415
        reason: Usupported Media Type
        userMessage: MediaType 'application/xml' is not supported.

